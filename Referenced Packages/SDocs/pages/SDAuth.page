<apex:page controller="SDOC.SDAuth" action="{!initARToken}" tabStyle="SDOC__SDTemplate__c"> 
<script>
    var newwindow;
    function popURL(url)
        {
          newwindow=window.open(url,"SDocs","width=1100,height=700,top=0,resizable,scrollbars,screenX=60,top=100,screenY=100");
            try{
                newwindow.document.location.href = url;
            }catch (exc){
                newwindow.close(); 
                newwindow=window.open(url,"SDocs","width=1100,height=700,top=0,resizable,scrollbars,screenX=60,top=100,screenY=100");
                newwindow.document.location.href = url; 
            }
            if (window.focus){newwindow.focus()}
        }
</script>
<apex:form >

<apex:outputPanel rendered="{!service=='sg'}"> 
<p align="center">
<br/>
<table>
<tr>
<td colspan="2">
        <b>SendGrid Config:</b><br/>
        </td>
        </tr>
        <tr>
        <td>
        <br/>
        Login:
        </td>
        <td>
        <apex:inputText value="{!sgu}"/>
    	<br />
    	</td>
    	</tr>
    	<tr>
    	<td>
    	Password: 
    	</td>
    	<td>
    	<apex:inputSecret value="{!sgpw}"/>
        <br/>
        </td>
        </tr>
        <tr>
        <td colspa="2">
         <br /><br />
         <apex:commandbutton action="{!sgSave}" value="Save/Update Sendgrid Credentials" />
         <br /><br />
         </td>
         </tr>
         <tr>
         <td colspan="2">
         <apex:commandbutton action="{!sgremove}" value="Remove Current SendGrid Credentials" />
         </td>
         </tr>
         </table>
<br/>
</p>
</apex:outputPanel>

<apex:outputPanel rendered="{!NOT(HaveToken) && service!='aws' && service!='sg'}"> 
<p align="center">
<br/>
        <b>Authorization Needed:</b><br/>
        You will now be redirected to your Google Drive sign in page. <br/>
        You need to verify your account and authorize S-Docs for Salesforce
        permission to upload documents. <br/>
        <br/>
         <br/>
<apex:commandbutton action="{!RequestToken}"
                 value="Authorize Google Drive Access" />
<br/>
</p>
</apex:outputPanel>
<apex:outputPanel rendered="{!service=='aws'}"> 
<p align="center">
<br/>
        <b>AWS3:</b><br/>
        <br/>
        S3 Key:<apex:inputText value="{!s3ki}"/>
    	<br />
    	S3 Secret: <apex:inputText value="{!s3si}"/>
        <br/>
    	S3 Bucket Name: <apex:inputText value="{!s3bi}"/>
        <br/>
    	End Point/Region (e.g: s3-us-west-2.amazonaws.com): <apex:inputText value="{!s3ei}"/>
    	 <br/>        <br/><apex:outputText value="{!s3Msgs}" escape="false"/>
         <br /><br />
         <apex:commandlink action="{!s3save}" value="Submit S3 Credentials" />
         <br /><br />
         <apex:commandlink action="{!s3remove}" value="Remove S3 Credentials" />
<br/>
</p>
</apex:outputPanel>
<apex:outputPanel id="nt" rendered="{!HaveToken && service!='sg'}">
<apex:pageBlock title="Upload S-Docs to Google Drive">
    <apex:outputPanel id="list">
    <apex:pageBlockSection title="The following S-Docs are queued for upload to Google Drive" columns="1" id="sg" collapsible="false">                       
         <apex:pageBlockSectionItem >
                    <apex:pageBlockTable value="{!SG}" var="ag">
                        <apex:column width="40px" headerValue="View">
                            <a href="{!ag.SDOC__GD_Link__c}" target="_blank">
                                <apex:outputText value="{!ag.SDOC__View_Link__c}" escape="false"/>
                            </a>
                        </apex:column>
                        <apex:column headerValue="Document Number">
                            <apex:outputLink value="{!ag.SDOC__GD_Link__c}" target="_blank">{!ag.Name}</apex:outputLink>
                        </apex:column>
                        <apex:column value="{!ag.SDOC__Document_Name__c}" headerValue="Document Name"/>                          
                        <apex:column headerValue="Google Docs Status">
                             <apex:outputLink rendered="{!NOT(ag.SDOC__GD_Status__c=='Queued')}" value="{!ag.SDOC__GD_Link__c}" target="_blank">{!ag.SDOC__GD_Status__c}</apex:outputLink>
                             <apex:outputText rendered="{!ag.SDOC__GD_Status__c=='Queued'}" value="{!ag.SDOC__GD_Status__c}"/>
                        </apex:column>                        
                        <apex:column headerValue="Remove from Queue" style="text-align:center;">
                                <apex:commandLink rendered="{!(ag.SDOC__GD_Status__c=='Queued')}" value="X" action="{!removeFromQueue}" styleClass="btn" rerender="nt">
                                    <apex:Param name="did" value="{!ag.ID}" />
                                </apex:commandLink>
                        </apex:column>
                        <apex:column value="{!ag.CreatedBy.Name}" headerValue="Created By"/> 
                        <apex:column value="{!ag.CreatedDate}" headerValue="Created On"/> 
                    </apex:pageBlockTable>
            </apex:pageBlockSectionItem>
    </apex:pageBlockSection>
    </apex:outputPanel>
</apex:pageBlock>       
        
<apex:outputPanel > 

<br/>
        <b>Upload Pending:</b><br/><br/>
        Click the button below to upload and link the above document(s) to your Google Drive account.<br/>
        Once the upload is complete, use Google Drive to manage edits and sharing rights for each document.
        <br/>
         <br/>
<apex:commandbutton action="{!createDoc}" rerender="list" status="stat"
                 value="Upload to Google Drive" />
                <apex:actionStatus id="stat">
                    <apex:facet name="start">
                        Uploading Documents, please wait...
                        <img src="{!URLFOR($Resource.SDoc,'spinner_large.gif')}" />
                    </apex:facet>
                </apex:actionStatus>
</apex:outputPanel>     
<br/><br/>
<br/><br/>
<apex:commandlink action="{!unlink}" value="Unlink S-Docs from my Google Drive account" />
</apex:outputPanel>
</apex:form>

<br />
</apex:page>