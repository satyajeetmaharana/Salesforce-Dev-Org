<apex:page StandardController="SDOC__SDTemplate__c" extensions="SDOC.SDTemplateEditor" 
action="{!init}" standardStylesheets="true" sidebar="false"> 
<head>

<apex:styleSheet value="{!URLFOR($Resource.SDOC__SDoc,'skin.css')}" />
<apex:styleSheet value="{!URLFOR($Resource.SDOC__SDoc,'Sdoc.css')}" />
<apex:stylesheet value="/sCSS/24.0/sprites/1297816277000/Theme3/default/gc/versioning.css" />
<apex:includeScript value="{!URLFOR($Resource.SDOC__ckEditor,'/ckeditor/ckeditor.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SDOC__SDoc,'yahoo-dom-event.js')}" />
<apex:includeScript value="{!URLFOR($Resource.SDOC__SDoc,'container-min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.SDOC__SDoc,'animation-min.js')}" />
<style>
.buttonStyle { width:75px; height:30px; }
textarea { width:100%; height:30px;}

</style>

<script type="text/javascript">
var AgreementForm = document.getElementById("blur");
//AgreementForm.style.height = window.screen.availHeight + "px";
//AgreementForm.style.width = window.screen.availWidth + "px";

var ContainerElem = document.getElementById("StatusBox");
//ContainerElem.style.display = "block";
AlignToCenter(ContainerElem);

function AlignToCenter(Element)
{
    var availableHeight = 0;
    var availableWidth = 0;
    if (Element.ownerDocument)
    {
        var docElement = Element.ownerDocument.documentElement;
        availableHeight = parseInt(docElement.clientHeight);
        if (availableHeight == "NaN") availableHeight = 0;
        
        availableWidth = parseInt(docElement.clientWidth);
        if (availableWidth == "NaN") availableWidth = 0;
    }

if (availableHeight == 0 || availableHeight == "NaN")
    availableHeight = window.screen.availHeight - 200;
if (availableWidth == 0 || availableWidth == "NaN")
    availableWidth = window.screen.availWidth - 100;

var msgBoxTop = parseInt((availableHeight - parseInt(Element.clientHeight))/2);
var msgBoxleft = parseInt((availableWidth - parseInt(Element.style.width))/2);

if (msgBoxTop == "NaN" || msgBoxTop == 0)
    msgBoxTop = 100;

Element.style.left = msgBoxleft + "px";
Element.style.top = msgBoxTop + window.pageYOffset + "px";
}

function reposition(){
    if(navigator.appName == 'Window Internet Explorer') AgreementForm.style.top = document.body.scrollTop;
    else AgreementForm.style.top = window.pageYOffset+"px";
    AlignToCenter(ContainerElem);
}
</script>
<script type="text/javascript">
    YAHOO.namespace("force.com");
    YAHOO.force.com.showMe = function() {
        document.getElementById("myPanel").style.display = "block";
        YAHOO.force.com.myDialog.show();
    }
    YAHOO.force.com.hideMe = function() {
        YAHOO.force.com.myDialog.hide();
    }
    YAHOO.force.com.showLine = function() {
        document.getElementById("linePanel").style.display = "block";
        YAHOO.force.com.eDialog.show();
    }
    YAHOO.force.com.hideLine = function() {
        YAHOO.force.com.eDialog.hide();
    }
    
    YAHOO.force.com.init = function() {
        document.body.className = document.body.className + " yui-skin-sam";
        var CKEDITOR   = window.CKEDITOR;
        if (CKEDITOR.env.ie8){
            YAHOO.force.com.myDialog = new YAHOO.widget.Panel(
            "myPanel",
            { width           :   "800px",visible         :   false,
             draggable       :   true, close           :   false,  
             modal           :   true,  fixedCenter     :   true,  zindex          :   100
            });
            YAHOO.force.com.eDialog = new YAHOO.widget.Panel(
            "linePanel",
            { width           :   "800px",visible         :   false,
             draggable       :   true, close           :   false,  
             modal           :   true,  fixedCenter     :   true,  zindex          :   100
            });            
        }else{
            YAHOO.force.com.myDialog = new YAHOO.widget.Panel(
            "myPanel",  // The id of our dialog container
            { 
                    width           :   "800px",
                    visible         :   false,
                    draggable       :   true,
                    close           :   true,
                    modal           :   true,
                    fixedCenter     :   true,
                    zindex          :   100,
                    effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.3} 
            }
            );
            YAHOO.force.com.eDialog = new YAHOO.widget.Panel("linePanel",
                {  
                    // width        :   "900px"
                    xy          :   [100,80]
                    ,visible        :   false
                    ,draggable      :   true
                    ,close          :   true
                    ,modal          :   true
                    ,fixedCenter    :   false
                    ,zindex         :   100
                    ,underlay       : "matte"
                    ,effect         :   {effect:YAHOO.widget.ContainerEffect.FADE,
                                          duration:0.3} 
                }
            );
       }
       YAHOO.force.com.eDialog.setHeader("Insert Related List");
       YAHOO.force.com.myDialog.render(document.body);
       YAHOO.force.com.eDialog.render(document.body);
    }
</script>
</head>

<div id="myPanel" style="display: none">
    <apex:actionStatus id="statLoad">
        <apex:facet name="start">
            <div id="blur" style="position:absolute; left:1px; top:1px; width:100%; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.7;filter:alpha(opacity=70)">
            </div>
            <div id="StatusBox" style="position:absolute; left:50%; top:200px; width: 120px; height:50px; opacity:1;filter:alpha(opacity=100)">
            <table border="1" cellpadding="0" cellspacing="0" style="border-left-color: #336699;
            border-bottom-color: #336699; width: 120px; border-top-color: #336699; height:50px;
            border-right-color:#336699; background-color:#ffffff;">
            <tr>
            <td align="left" valign="top">
            <table border="0" cellpadding="4" cellspacing="0" style="width: 100%; height: 100%">
            <tr>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;">
            <img src="{!URLFOR($Resource.SDoc,'spinner_large.gif')}"/></td>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;color:darkred;font-size:11pt;font-weight:bold;">
            &nbsp;Loading...</td>
            </tr>
            </table>
            </td>
            </tr>
            </table>
            </div>
        </apex:facet>
    </apex:actionStatus>
    <div class="hd">
        <apex:outputtext value="Fields for: {!SDOC__SDTemplate__c.SDOC__Base_Object__c}"/> 
    </div>
    <div class="bd">
    <apex:form >
          <div class="ft" style="font-size: 11px;">
        <apex:outputPanel layout="block">
          Select a field, then click Insert. Labels followed by a ">" indicate that there are more fields available. 
          If you need to extend further, you can manually edit the value or consider creating a formula field on your
          base object: {!SDOC__SDTemplate__c.SDOC__Base_Object__c}.
        </apex:outputPanel>
      </div>
        <apex:pageBlock id="block2" >
            <apex:pageblocksection columns="6">
             <apex:pageblocksectionItem >
                <apex:outputpanel id="l1">
                    <apex:outputtext value="{!f1Obj}" style="font-weight : bold;"/><br />
                    <apex:selectList value="{!f1}" size="12" style="max-width: 200px;"> 
                        <apex:selectOptions value="{!f1List}" />
                            <apex:actionSupport event="onchange" action="{!level1}" rerender="l2,l3,o" status="statLoad"/>
                    </apex:selectList>
                </apex:outputpanel>
              </apex:pageblocksectionItem>
              <apex:outputpanel id="l2">
                <apex:outputtext value="{!f2Obj}" style="font-weight : bold;"/><br />
                    <apex:selectList value="{!f2}" size="12" id="f2"  rendered="{!NOT(ISNULL(f2List))}" style="max-width: 200px;"> 
                        <apex:selectOptions value="{!f2List}" />
                        <apex:actionSupport event="onchange" action="{!level2}" rerender="l3,o" status="statLoad"/>
                    </apex:selectList>
                </apex:outputpanel>
              <apex:outputpanel id="l3">
                <apex:outputtext value="{!f3Obj}" style="font-weight : bold;"/><br />
                    <apex:selectList value="{!f3}" size="12" id="f3"  rendered="{!NOT(ISNULL(f3List))}" style="max-width: 200px;"> 
                        <apex:selectOptions value="{!f3List}" />
                        <apex:actionSupport event="onchange" action="{!level3}" rerender="o" status="statLoad"/>
                    </apex:selectList>
                </apex:outputpanel>
            </apex:pageblocksection>
            <apex:outputPanel id="o" >
                <apex:pageblocksection >
                    <apex:pageblocksectionItem rendered="{!NOT(isNum)&& NOT(isDate)}">  
                        <apex:inputcheckbox value="{!checked}" >
                            <apex:actionSupport event="onchange" action="{!checktoggle}" rerender="o" status="statLoad"/>
                        </apex:inputcheckbox>
                        <apex:outputLabel value="This field value contains HTML, Rich Text or images"/>
                    </apex:pageblocksectionItem>
                </apex:pageblocksection>
                <apex:pageblocksection rendered="{!isDate}">
                    <apex:pageblocksectionItem >
                        <apex:outputLabel value="Format Date:"/>
                        <apex:selectList value="{!fdoption}" size="1" id="fdo"> 
                            <apex:selectOptions value="{!fdoptions}" />
                            <apex:actionSupport event="onchange" action="{!checktoggle}" rerender="o" status="statLoad"/>
                         </apex:selectList>
                    </apex:pageblocksectionItem>
                </apex:pageblocksection>
                <apex:pageblocksection rendered="{!isNum}">
                    <apex:pageblocksectionItem >
                        <apex:outputLabel value="Format Number:"/>
                        <apex:selectList value="{!fcoption}" size="1" id="fco"> 
                            <apex:selectOptions value="{!fcoptions}" />
                            <apex:actionSupport event="onchange" action="{!checktoggle}" rerender="o" status="statLoad"/>
                         </apex:selectList>
                     </apex:pageblocksectionItem>
                </apex:pageblocksection>
                <apex:pageblocksection columns="1">
                     <apex:outputLabel value="The following will be inserted into your template:"/>
                    <apex:inputText value="{!output}" size="100"/>
                    <apex:commandButton value="Insert" oncomplete="insert('{!output}');" rendered="{!NOT(ISNULL(output))}"  
                    styleClass="buttonStyle" style="font-size:14px;"/>
                </apex:pageblocksection>
            </apex:outputPanel>
        </apex:pageBlock>
        <div style="text-align: center;" >
            <apex:commandButton value="Cancel" immediate="true" oncomplete="YAHOO.force.com.hideMe();"/>
        </div>
    </apex:form>
    </div>

</div>

<div id="linePanel" style="display: none">
<apex:tabPanel switchType="client" selectedTab="name1" id="theTabPanel" 
styleClass="theTabPanel" tabClass="theTabPanel" contentClass="tabContent" 
activeTabClass="activeTab" inactiveTabClass="inactiveTab" width="900px">
<apex:tab label="Select Data Columns" name="tab1" id="tabOne">

    <apex:actionStatus id="statLoad2">
        <apex:facet name="start">
            <div id="blur" style="position:absolute; left:1px; top:1px; width:100%; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.7;filter:alpha(opacity=70)">
            </div>
            <div id="StatusBox" style="position:absolute; left:50%; top:200px; width: 120px; height:50px; opacity:1;filter:alpha(opacity=100)">
            <table border="1" cellpadding="0" cellspacing="0" style="border-left-color: #336699;
            border-bottom-color: #336699; width: 120px; border-top-color: #336699; height:50px;
            border-right-color:#336699; background-color:#ffffff;">
            <tr>
            <td align="left" valign="top">
            <table border="0" cellpadding="4" cellspacing="0" style="width: 100%; height: 100%">
            <tr>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;">
            <img src="{!URLFOR($Resource.SDoc,'spinner_large.gif')}"/></td>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;color:darkred;font-size:11pt;font-weight:bold;">
            &nbsp;Loading...</td>
            </tr>
            </table>
            </td>
            </tr>
            </table>
            </div>
        </apex:facet>
    </apex:actionStatus>

    <div class="bd">
    <apex:form >
        <div class="ft" style="font-size: 11px;">
        <apex:outputPanel layout="block">
        Related lists are merged as tables (with rows and columns) into your document.
        Select a related list object from the picklist below.
        Then choose fields that you want included as columns for your table.
        Columns are rendered from left to right based on their order in the "Selected Columns" list below.
        An "Insert Table" button will appear that allows you to embed the table into your template. 
        Note: only the header row will appear in the template graphical view. Data rows are merged when the document is generated.
       
        </apex:outputPanel>
         </div>
        <apex:pageBlock id="block4" title="Step 1: Select a Related List">
            <apex:pageblocksection >
                <apex:outputLabel for="sl1" value="Available Related Lists for {!SDOC__SDTemplate__c.SDOC__Base_Object__c} :"/>
                <apex:selectList id="sl1" value="{!rl1}" size="1"> 
                    <apex:selectOptions value="{!rl1List}" />
                    <apex:actionSupport event="onchange" action="{!levelRL1}" rerender="rl2,rl3,rl4,p,bt2" status="statLoad2"/>
                </apex:selectList>
            </apex:pageblocksection>
       </apex:pageBlock>
       <apex:pageBlock id="block5" title="Step 2: Choose Table Columns">
            <apex:pageblocksection columns="10">
                <apex:panelGrid id="rl2">
                    <apex:outputtext value="Object: {!rl1Obj}" style="font-weight : bold;"/>
                    <apex:outputtext value="Available Fields: "/>
                    <apex:selectList value="{!rl2}" size="12" id="f4" style="max-width: 200px;"> 
                        <apex:selectOptions value="{!rl2List}" />
                        <apex:actionSupport event="onchange" action="{!levelRL2}" rerender="rl3,rl4" status="statLoad2"/>
                    </apex:selectList>
                </apex:panelGrid>
                <apex:panelGrid id="rl3">
                    <apex:outputtext value="Object: {!rl2Obj}" rendered="{!showRl3}" style="font-weight : bold;"/>
                    <apex:outputtext value="Available Fields: " rendered="{!showRl3}"/>
                    <apex:selectList value="{!rl3}" size="12" id="f5" rendered="{!showRl3}" style="max-width: 200px;"> 
                        <apex:selectOptions value="{!rl3List}" />
                        <apex:actionSupport event="onchange" action="{!levelRL3}" rerender="rl4" status="statLoad2"/>
                    </apex:selectList>
                </apex:panelGrid>
                <apex:panelGrid id="rl4" >
                    <apex:outputtext value="Object: {!rl3Obj}" rendered="{!showRl4}"  style="font-weight : bold;"/>
                    <apex:outputtext value="Available Fields: " rendered="{!showRl4}"/>
                    <apex:selectList value="{!rl4}" size="12" id="rl4sl" rendered="{!showRl4}" style="max-width: 200px;"> 
                        <apex:selectOptions value="{!rl4List}" />
                    </apex:selectList>
                </apex:panelGrid>
                <apex:panelGrid id="bt1">
                    <br />
                    <br />
                    <apex:outputtext value="Add"/><br />
                    <apex:commandButton action="{!add}" image="{!URLFOR($Resource.SDOC__SDoc,'right.gif')}" 
                    style="border:none; padding:0px 0px 0px 0px;" rerender="p,op,fp,fp4,b2" status="statLoad2"/><br />
                    <apex:commandButton action="{!remove}" image="{!URLFOR($Resource.SDOC__SDoc,'left.gif')}" 
                    style="border:none; padding:0px 0px 0px 0px;" rerender="p,op,fp,fp4,b2" status="statLoad2"/><br />
                    <apex:outputtext value="Remove"/><br />
                    <br />
                </apex:panelGrid>
                <apex:panelGrid id="p">
                    <apex:outputtext value="Selected Columns (left to right)" style="font-weight : bold;" /><br />
                    <apex:selectList value="{!rlf}" size="12" id="f6" style="width: 250px;" >
                        <apex:selectOptions value="{!rlfList}" />
                        <apex:actionSupport event="onchange" action="{!getcol}" rerender="fp,fp4" status="statLoad2"/>
                    </apex:selectList>
                </apex:panelGrid>
                <apex:panelGrid id="bt2">
                    <br />
                    <br />
                    <apex:outputtext value="Move Up"/><br />
                    <apex:commandButton action="{!moveup}" image="{!URLFOR($Resource.SDOC__SDoc,'up.gif')}" 
                    style="border:none; padding:0px 0px 0px 0px;" rerender="p,q,op,fp,fp4" status="statLoad2"/><br />
                    <apex:commandButton action="{!movedown}" image="{!URLFOR($Resource.SDOC__SDoc,'down.gif')}" 
                    style="border:none; padding:0px 0px 0px 0px;" rerender="p,q,op,fp,fp4" status="statLoad2"/><br />
                    <apex:outputtext value="Move Down"/><br />
                </apex:panelGrid>                
           </apex:pageblocksection>
        </apex:pageBlock>
        <apex:outputPanel id="b2">
        <div style="text-align: center;" >
            <apex:commandButton value="Insert" oncomplete="insertLine('{!output}');"  rendered="{!rlfList.size>0}"  styleClass="buttonStyle"  style="font-size:14px;" status="statLoad2"/>  
            <apex:commandButton value="Cancel" immediate="true" oncomplete="YAHOO.force.com.hideLine();" style="font-size:14px;" styleClass="buttonStyle" status="statLoad2"/>
        </div>
        </apex:outputPanel>
    </apex:form>
    </div>

</apex:tab>
<apex:tab label="Format Data Columns" name="tab2" id="tabTwo">  
<apex:form >
    <apex:actionStatus id="statLoad3">
        <apex:facet name="start">
            <div id="blur" style="position:absolute; left:1px; top:1px; width:100%; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.7;filter:alpha(opacity=70)">
            </div>
            <div id="StatusBox" style="position:absolute; left:50%; top:200px; width: 120px; height:50px; opacity:1;filter:alpha(opacity=100)">
            <table border="1" cellpadding="0" cellspacing="0" style="border-left-color: #336699;
            border-bottom-color: #336699; width: 120px; border-top-color: #336699; height:50px;
            border-right-color:#336699; background-color:#ffffff;">
            <tr>
            <td align="left" valign="top">
            <table border="0" cellpadding="4" cellspacing="0" style="width: 100%; height: 100%">
            <tr>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;">
            <img src="{!URLFOR($Resource.SDoc,'spinner_large.gif')}"/></td>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;color:darkred;font-size:11pt;font-weight:bold;">
            &nbsp;Loading...</td>
            </tr>
            </table>
            </td>
            </tr>
            </table>
            </div>
        </apex:facet>
    </apex:actionStatus>
    <apex:outputPanel id="fp">
        <apex:pageBlock title="Choose a column to format">
            <apex:pageBlockSection columns="2">
                <apex:pageBlockSectionItem >
                    <apex:selectList value="{!rlf}" size="12" id="f7" style="width: 300px;" >
                        <apex:selectOptions value="{!rlfList}" />
                        <apex:actionSupport event="onchange" action="{!getcol}" rerender="cold" status="statLoad3"/> 
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                 <apex:pageBlockSectionItem >
                 <apex:outputPanel id="cold">
                     <apex:outputlabel for="c1" value="Header Text (Column Header): "/> 
                        <apex:inputText id="c1" value="{!thisCol.header}" style="width:100%" disabled="{!thisCol.mergenext}"/> <br />
                     <apex:outputlabel for="c6" value="Merge with Next Column and Display as Single Column: "/>
                            <apex:inputCheckbox value="{!thisCol.mergenext}"/><br /><br />
                     <apex:outputlabel for="c1a" value="Data Mapped To: "/> <apex:inputText disabled="true" id="c1a" value="{!thisCol.dataMapping}" style="width:100%"/> <br />
                     <apex:outputlabel for="c1b" value="Data Contains Rich Text or HTML: "/><apex:inputCheckbox value="{!thisCol.rtffield}"/><br /><br />
                     <apex:outputlabel for="c2" value="Prefix Text: "/> <apex:inputText id="c2" value="{!thisCol.prefix}" style="width:100%"/><br />
<!--                 <apex:outputlabel for="c3" value="Prefix Text if Null: "/> <apex:inputText id="c3" value="{!thisCol.prefixifnull}" style="width:100%"/><br /> -->
                     <apex:outputlabel for="c4" value="Postfix Text: "/> <apex:inputText id="c4" value="{!thisCol.postfix}" style="width:100%"/><br />
                     <apex:outputlabel for="c5" value="Text to Display if Data is Null: "/> <apex:inputText id="c5" value="{!thisCol.postfixifnull}" style="width:100%"/><br />
                     <apex:outputlabel for="c7" value="Start a New Row: "/><apex:inputCheckbox value="{!thisCol.newrow}"/><br /><br />
                     <apex:outputlabel for="c8" value="Number of Columns to Span (colspan): "/> <apex:inputText id="c8" value="{!thisCol.colspan}" style="width:100%"/><br />
                     <apex:outputlabel for="c9" value="Format Number (e.g. #,###.##): "/><apex:inputText id="c9" value="{!thisCol.formatnum}" style="width:100%"/><br />
                     <apex:outputlabel for="c10" value="Format Date: (e.g. dd/MM/yyyy):"/><apex:inputText id="c10" value="{!thisCol.formatdate}" style="width:100%"/><br />
                     <apex:actionSupport event="onchange" action="{!setcol}" rerender="cold,op" status="statLoad3"/>
                 </apex:outputPanel>
                 </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            </apex:pageBlock>
        <apex:outputPanel id="b3">
            <div style="text-align: center;" >
                <apex:commandButton value="Insert" oncomplete="insertLine('{!output}');"  rendered="{!rlfList.size>0}" styleClass="buttonStyle"  style="font-size:14px;" status="statLoad3"/>  
                <apex:commandButton value="Cancel" immediate="true" oncomplete="YAHOO.force.com.hideLine();" style="font-size:14px;" styleClass="buttonStyle" status="statLoad3"/>
            </div>
        </apex:outputPanel>
     </apex:outputPanel>
    </apex:form>
    
</apex:tab>
<apex:tab label="Filters and Sort Order" name="tab3" id="tabThree">
<apex:form >
    <apex:outputPanel id="wp">
        <apex:pageBlock title="Filter Rows" mode="edit">
            <apex:pageBlockSection columns="1">
                <apex:pageBlockSectionItem >
                    <apex:outputlabel for="where" value="Include a Filter/ SOQL WHERE clause (e.g. CreatedDate = THIS_YEAR)"/>
                    <apex:inputText id="where" value="{!whereclause}" style="width:100%;">
                        <apex:actionSupport event="onchange" action="{!updateO}" rerender="op" status="statLoad2"/>
                    </apex:inputText>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputlabel for="limit" value="Maximum number of rows returned/ SOQL LIMIT (e.g. 20): "/>
                    <apex:inputText id="limit" value="{!limitclause}" style="width:100%;">
                        <apex:actionSupport event="onchange" action="{!updateO}" rerender="op" status="statLoad2"/>
                    </apex:inputText>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputlabel for="orderby" value="Sort by column(s)/ SOQL ORDER BY clause (e.g. CreatedBy.name, CreatedDate Desc): "/>
                    <apex:inputText id="orderby" value="{!orderbyclause}" style="width:100%;">
                        <apex:actionSupport event="onchange" action="{!updateO}" rerender="op" status="statLoad2"/>
                    </apex:inputText>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>

        </apex:pageBlock>
     </apex:outputPanel>
    </apex:form>
</apex:tab>
<apex:tab label="Formatting & Styles" name="tab4" id="tabFour">
<apex:form >
    <apex:actionStatus id="statLoad4">
        <apex:facet name="start">
            <div id="blur" style="position:absolute; left:1px; top:1px; width:100%; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.7;filter:alpha(opacity=70)">
            </div>
            <div id="StatusBox" style="position:absolute; left:50%; top:200px; width: 120px; height:50px; opacity:1;filter:alpha(opacity=100)">
            <table border="1" cellpadding="0" cellspacing="0" style="border-left-color: #336699;
            border-bottom-color: #336699; width: 120px; border-top-color: #336699; height:50px;
            border-right-color:#336699; background-color:#ffffff;">
            <tr>
            <td align="left" valign="top">
            <table border="0" cellpadding="4" cellspacing="0" style="width: 100%; height: 100%">
            <tr>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;">
            <img src="{!URLFOR($Resource.SDoc,'spinner_large.gif')}"/></td>
            <td style="border-bottom-color:#336699; border-bottom-width:0px; border-bottom-style:solid;vertical-align:middle;color:darkred;font-size:11pt;font-weight:bold;">
            &nbsp;Loading...</td>
            </tr>
            </table>
            </td>
            </tr>
            </table>
            </div>
        </apex:facet>
    </apex:actionStatus>
    <apex:outputPanel id="fp4">
        <apex:pageBlock title="Choose a column to change style">
            <apex:pageBlockSection columns="2">
                <apex:pageBlockSectionItem >
                    <apex:selectList value="{!rlf}" size="12" id="f74" style="width: 300px;" >
                        <apex:selectOptions value="{!rlfList}" />
                        <apex:actionSupport event="onchange" action="{!getcol}" rerender="cold4" status="statLoad4"/> 
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                 <apex:pageBlockSectionItem >
                 <apex:outputPanel id="cold4">
                     <apex:outputlabel for="c4_1" value="font-family (e.g. times, courier, arial): "/> <apex:inputText id="c4_1" value="{!thisCol.cssff}" style="width:100%"/> <br />
                     <apex:outputlabel for="c4_2" value="font-size (use points): "/> <apex:inputText id="c4_2" value="{!thisCol.cssfs}" style="width:100%"/> <br />
                     <apex:outputlabel for="c4_3" value="font-weight (e.g. normal, bold, bolder): "/> <apex:inputText id="c4_3" value="{!thisCol.cssfw}" style="width:100%"/> <br />
                     <apex:outputlabel for="c4_4" value="text-align (e.g. left, center, right): "/> <apex:inputText id="c4_4" value="{!thisCol.cssta}" style="width:100%"/> <br />
                     <apex:outputlabel for="c4_5" value="width (if using %, all column widths should total 100%): "/> <apex:inputText id="c4_5" value="{!thisCol.csscw}" style="width:100%"/> <br />
                     <apex:actionSupport event="onchange" action="{!setcol}" rerender="cold,op" status="statLoad4"/>
                 </apex:outputPanel>
                 </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
        <apex:pageBlock title="Select table style">
            <apex:pageBlockSection columns="1">
                <apex:pageBlockSectionItem >
                <apex:outputPanel id="ts">
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_6.png')}" rendered="{!tableStyle='A6'}" 
                                style="background-color:white; padding:10px; border:2px solid black;"/>
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_6.png')}" rendered="{!tableStyle!='A6'}" style="cursor:pointer;" >
                        <apex:actionSupport event="onclick" action="{!setStyle}" rerender="ts,op" status="statLoad4">
                            <apex:param name="s" value="A6"/>
                        </apex:actionSupport>
                    </apex:image>
                    &nbsp;&nbsp;
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_1.png')}" rendered="{!tableStyle='A1'}" 
                                style="background-color:white; padding:10px; border:2px solid black;"/>
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_1.png')}" rendered="{!tableStyle!='A1'}" style="cursor:pointer;" >
                        <apex:actionSupport event="onclick" action="{!setStyle}" rerender="ts,op" status="statLoad4">
                            <apex:param name="s" value="A1"/>
                        </apex:actionSupport>
                    </apex:image>
                    &nbsp;&nbsp;
                    
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_2.png')}" rendered="{!tableStyle='A2'}" 
                                style="background-color:white; padding:10px; border:2px solid black;"/>
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_2.png')}" rendered="{!tableStyle!='A2'}" style="cursor:pointer;" >
                        <apex:actionSupport event="onclick" action="{!setStyle}" rerender="ts,op" status="statLoad4">
                            <apex:param name="s" value="A2"/>
                        </apex:actionSupport>
                    </apex:image>
                    &nbsp;&nbsp;
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_3.png')}" rendered="{!tableStyle='A3'}" 
                                style="background-color:white; padding:10px; border:2px solid black;"/>
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_3.png')}" rendered="{!tableStyle!='A3'}" style="cursor:pointer;" >
                        <apex:actionSupport event="onclick" action="{!setStyle}" rerender="ts,op" status="statLoad4">
                            <apex:param name="s" value="A3"/>
                        </apex:actionSupport>
                    </apex:image>
                    &nbsp;&nbsp;
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_4.png')}" rendered="{!tableStyle='A4'}" 
                                style="background-color:white; padding:10px; border:2px solid black;"/>
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_4.png')}" rendered="{!tableStyle!='A4'}" style="cursor:pointer;" >
                        <apex:actionSupport event="onclick" action="{!setStyle}" rerender="ts,op" status="statLoad4">
                            <apex:param name="s" value="A4"/>
                        </apex:actionSupport>
                    </apex:image>
                    &nbsp;&nbsp;
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_5.png')}" rendered="{!tableStyle='A5'}" 
                                style="background-color:white; padding:10px; border:2px solid black;"/>
                    <apex:image value="{!URLFOR($Resource.SDOC__SDoc,'Style_A_5.png')}" rendered="{!tableStyle!='A5'}" style="cursor:pointer;" >
                        <apex:actionSupport event="onclick" action="{!setStyle}" rerender="ts,op" status="statLoad4">
                            <apex:param name="s" value="A5"/>
                        </apex:actionSupport>
                    </apex:image>
                    <br /><br />
                </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>        
        <apex:outputPanel id="b4">
            <div style="text-align: center;" >
                <apex:commandButton value="Insert" oncomplete="insertLine('{!output}');"  rendered="{!rlfList.size>0}" styleClass="buttonStyle"  style="font-size:14px;" status="statLoad4"/>  
                <apex:commandButton value="Cancel" immediate="true" oncomplete="YAHOO.force.com.hideLine();" style="font-size:14px;" styleClass="buttonStyle" status="statLoad4"/>
            </div>
        </apex:outputPanel>
     </apex:outputPanel>
    </apex:form>    
</apex:tab>
<apex:tab label="Advanced" name="tab5" id="tabFive">
    <apex:form >
    <apex:outputPanel id="op">
        <apex:pageBlock title="Edit Source " mode="edit">
            <apex:pageBlockSection columns="1">
                <apex:pageBlockSectionItem >
                   <apex:inputTextarea id="output" value="{!advancedRL}" style="width:100%; height:400px;"/>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
            <div style="text-align: center;" >
                <apex:commandButton value="Insert" action="{!setAdvanced}" oncomplete="insertLine('{!advancedRL}');"  rendered="{!rlfList.size>0}"  styleClass="buttonStyle"  style="font-size:14px;" status="statLoad2"/>  
                <apex:commandButton value="Cancel" immediate="true" oncomplete="YAHOO.force.com.hideLine();" style="font-size:14px;" styleClass="buttonStyle" status="statLoad2"/>
            </div>
    </apex:outputPanel>
    </apex:form>
</apex:tab>
</apex:tabPanel>
</div>


    <apex:form >
    <apex:pageMessages />    
    <apex:outputText escape="false" rendered="{!NOT(ISNULL(SDOC__SDTemplate__c.SDOC__Master_Template__c))}">
        <span style="font-weight:bold; font-size:12pt; color:red; text-align:center"> 
            You cannot edit this template because it is an archived version that is READ-ONLY.<br/>
            If you want to restore this version, open the 
            <a href ="/{!SDTemplate__c.master_template__c}">CURRENT VERSION</a>
            of this template, and then click on the restore link from the Version History list.
        </span>
    </apex:outputText>
    <apex:pageBlock title="Edit Template: {!SDOC__SDTemplate__c.name}" id="editBlock" mode="edit">
        <apex:outputText value="Field for edit:" rendered="false"/>    
        <apex:selectList value="{!fieldForEdit}" size="1" id="f3" rendered="false"> 
            <apex:selectOptions value="{!templateFields}" />
            <apex:actionSupport event="onchange" action="{!swapEditor}"></apex:actionSupport>
        </apex:selectList>
        <apex:pageBlockButtons >
            <apex:commandButton value="Save" action="{!save}" rendered="{!ISNULL(SDOC__SDTemplate__c.SDOC__Master_Template__c)}"/>
            <apex:commandButton value="Cancel" action="{!cancel}"/>
            <apex:commandButton value="Insert Field" oncomplete="YAHOO.force.com.showMe();" rendered="{!ISNULL(SDOC__SDTemplate__c.SDOC__Master_Template__c)}"/>
            <apex:commandButton value="Insert Related List" oncomplete="YAHOO.force.com.showLine();" rendered="{!ISNULL(SDOC__SDTemplate__c.SDOC__Master_Template__c)}"/>
       </apex:pageBlockButtons>
<apex:tabPanel switchType="client" selectedTab="name1" id="mainTabPanel" 
styleClass="theTabPanel" tabClass="theTabPanel" contentClass="tabContent" 
activeTabClass="activeTab" inactiveTabClass="inactiveTab" width="100%">
<apex:tab label="Template Body" name="tab1" id="mtab1">

        <apex:pageBlockSection columns="1" rendered="{!whichEditor=='1'}">
                <apex:pageBlockSectionItem >
                   <apex:inputTextarea id="editor1" value="{!TemplateXML}" styleClass="ckeditor1" />
                </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
</apex:tab>

<apex:tab label="Header" name="tab2" id="mtab2" rendered="{!showtab2}">
            <apex:pageBlockSection title="Header on First Page" columns="1" id="hofp">
                <script>twistSection(document.getElementById("{!$Component.hofp}").childNodes[0].childNodes[0]); </script>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPHeader_BackGrndImgUrl__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPHeader_BackGrndImgStyle__c}" rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPHeader_Content__c}" rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>        
               <apex:pageBlockSectionItem >
                   <apex:inputTextarea id="editor2" value="{!header}" styleClass="ckeditor1" />
                </apex:pageBlockSectionItem>                        
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Header on Remaining Pages" columns="1" id="horp">
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__HeaderSame__c}"/>
             <script>twistSection(document.getElementById("{!$Component.horp}").childNodes[0].childNodes[0]); </script>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPHeader_BackGrndImgUrl__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPHeader_BackGrndImgStyle__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPHeader_Content__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:pageBlockSectionItem >
                   <apex:inputTextarea id="editor3" value="{!header2}" styleClass="ckeditor1" />
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
</apex:tab>
<apex:tab label="Footer" name="tab3" id="mtab3" rendered="{!showtab3}">
             <apex:pageBlockSection title="Footer on First Page" columns="1" id="fofp">
             <script>twistSection(document.getElementById("{!$Component.fofp}").childNodes[0].childNodes[0]); </script>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPFooter_BackGrndImgUrl__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPFooter_BackGrndImgStyle__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPFooter_Content__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:pageBlockSectionItem >
                   <apex:inputTextarea id="editor4" value="{!footer}" styleClass="ckeditor1" />
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Footer on Remaining Pages" columns="1" id="forp">
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__FooterSame__c}"/>
             <script>twistSection(document.getElementById("{!$Component.forp}").childNodes[0].childNodes[0]); </script>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPFooter_BackGrndImgUrl__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPFooter_BackGrndImgStyle__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPFooter_Content__c}"  rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                <apex:pageBlockSectionItem >
                   <apex:inputTextarea id="editor5" value="{!footer2}" styleClass="ckeditor1" />
                </apex:pageBlockSectionItem>                
            </apex:pageBlockSection>

</apex:tab>
<apex:tab label="Page Settings" name="tab4" id="mtab4" rendered="{!showtab4}">
                <apex:pageBlockSection title="Page Properties" columns="2">
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Embed_Images__c}" rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}"/>
                    <apex:outputlabel value="" rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c!='DOC'}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Margin_Left__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Unit_of_Measure__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Margin_Right__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Width__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Header_Margin__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Height__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Footer_Margin__c}"/>
                </apex:pageBlockSection>

</apex:tab>    
<apex:tab label="Document Options" name="tab5" id="mtab5" rendered="{!showtab5}">
                    <apex:pageBlockSection title="Attachment & File Options"  columns="2" >

                        <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                            <apex:outputLabel value="Enable Advanced MS Settings for this template"/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Use_Advanced_Properties__c}" />  
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="Auto Create Salesforce Attachment and link to record"/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Create_Attachment__c}" />  
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

                        <apex:pageBlockSectionItem >
                            <apex:outputLabel value="Auto Create Salesforce File and link to record"/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Create_File__c}" />  
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 
                    <apex:pageBlockSectionItem >
                        <div class="ft" style="font-size: 12px;">
                        		<br></br>
                                <center>You can use the field below to override the default Attachment and File naming format  (eg SD-0001)</center> 
                                <br></br><b>Note 1:</b> You can mix merged fields from your base object with static text:
                                <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>Proposal For &#123;!Opportunity.Account.Name}</i></span>
                                <br></br><b>Note 2:</b> Do Not include the extension (.doc, .pdf etc) in the attachment format below, it will be added automatically when generated
                                <br></br><b>Note 3:</b> You can include the following special fields as needed :&#123;!DocumentID} and &#123;!DocumentName}
                                <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Where <i>&#123;!DocumentID}</i> is the orginal name (eg SD-0001) and <i>&#123;!DocumentName}</i> is the template name used</span>
                                <br></br><b>Note 4:</b> If you cannot achieve the desired attachment name below, you can leverage a formula field to dynamically generate the attachment format.
                                <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>&#123;!opportunity.sdoc_attachment_name__c}</i> where sdoc_attachment_name is an example of a formula field you create</span>
                        </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >                             
                    </apex:pageBlockSectionItem>                    
                   
                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="an" value="Output file (Attachment Name) Format:"/>
                                <apex:inputField id="an" value="{!SDOC__SDTemplate__c.SDOC__Create_Attachment_Name__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <div class="ft" style="font-size: 12px;">
                                <br></br><br></br>By default, any file that is generated in the 'Notes and Attachments' related list
                                <br/>is automatically deleted when the S-Docs record that created it is deleted. This is a clean up measure.
                                <br></br>You can uncheck below if you want to preserve all attachments regardless of linked record deletes.
                       </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>                     
                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="ad" value="Delete Related Attachment upon S-Doc delete:"/>
                                <apex:inputField id="ad" value="{!SDOC__SDTemplate__c.SDOC__Remove_Attachment_On_Delete__c}"/>
                    </apex:pageBlockSectionItem> 
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem> 
                    </apex:pageBlockSection>
                    
                    <apex:pageBlockSection title="Other Options"  columns="2" >
                    <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='PDF' || SDOC__SDTemplate__c.SDOC__Template_Format__c=='XLS'|| SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                                <apex:outputLabel for="uc" value="Template contains international characters (Unicode fonts)"/>
                                <apex:inputField id="uc" value="{!SDOC__SDTemplate__c.SDOC__PDF_Unicode__c}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='PDF' || SDOC__SDTemplate__c.SDOC__Template_Format__c=='XLS'|| SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">                        
                    </apex:pageBlockSectionItem>                               
                    <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='PDF' || SDOC__SDTemplate__c.SDOC__Template_Format__c=='XLS'|| SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                                <apex:outputLabel for="uc" value="Unicode Enforcement Level"/>
                                <apex:inputField id="uc" value="{!SDOC__SDTemplate__c.SDOC__Unicode_Level__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='PDF' || SDOC__SDTemplate__c.SDOC__Template_Format__c=='XLS'|| SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="aa" value="Auto Attach related case articles to outbound email:"/>
                                <apex:inputField id="aa" value="{!SDOC__SDTemplate__c.SDOC__InclArticles__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>
                    
                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="aa" value="Show all warning messages during document generation:"/>
                                <apex:inputField id="aa" value="{!SDOC__SDTemplate__c.SDOC__Show_Warning_Messages__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="vh" value="Version History: Maximum Records Retained in Archive"/>
                                <apex:inputField id="vh" value="{!SDOC__SDTemplate__c.SDOC__Version_History_Keep_Limit__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>

					<apex:pageBlockSectionItem >
                                <apex:outputLabel for="mm1" value="When using this template in mass merge, only create a single summary doc"/>
                                <apex:inputField id="mm1" value="{!SDOC__SDTemplate__c.SDOC__Mass_Merge_Summary_Document__c}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="mm2" value="When using this template in mass merge, immediately clear jobs:"/>
                                <apex:inputField id="mm2" value="{!SDOC__SDTemplate__c.SDOC__Mass_Merge_Clear_Jobs__c}"/>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>
                                        

                    </apex:pageBlockSection>
</apex:tab>                    
<apex:tab label="Email Settings" name="tab6" id="mtab6" rendered="{!showtab6}">
<apex:pageBlockSection title="Email Settings" columns="2">
                   <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                            The fields below can be used to control the behavior and defaults when this template is emailed.
                             <br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note, to set the body of the outbound email, you must create an S-Docs template where the "Template Format" field is set to HTML. 
                            That HTML template, when included along with other generated S-Docs, will automatically be substituted as the body of the outbound email message. <br />
                            This gives you far greater control and flexibility to create your email message and attachments.
                            <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To help avoid conflicts when a user generates a set of templates having different email
                             defaults, we recommend setting the fields below only on the "HTML" version of your S-Docs templates.
                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>
                    
                    <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                           <center><b>Email Subject</b></center>
                            <br/>
                            For the subject line, you may enter a static value or use dynamic fields. <br />
                            <br></br><b>Example 1:</b> If your base object was Opportunity, you could set the default subject to: 
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i> Your quote request for &#123;!Opportunity.Name} is attached.</i></span>
                            <br></br><b>Example 2:</b> If your base object was MyCustObj__c,, you could set the default subject to: 
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Important Information Re Acct#:  &#123;!MyCustObj__c.Account__r.AccountNumber}</i></span>
                            
                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                            Locking fields will prevent users from changing the value to anything other than the default value defined in the left column. If the default value is left blank
                            and you lock the field, the entire field and label will be hidden, and therefore cannot be set by the user. If you leave the "Send To"" field blank
                            and you check "Lock Send To Address", the user will be blocked from emailing this document. If a user is generating multiple documents with different locking restrictions,
                            the most restrictive settings are applied to the document set generated.
                    </div>
                    </apex:pageBlockSectionItem>
                    
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Subject__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_Subject__c}"/>
                    <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                            <center><b>Email Recipients</b></center>
                            <br></br><b>Example 1:</b> For a template Related To an Account, where you want to automatically bcc the account owner and your compliance team, you can set bbc to:
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;!Account.owner.email}, compliance@mycompany.com</span>
                            <br></br><b>Example 2:</b> For a template Related To a custom object named MyCustObj__c, you could default the 'Email Send To': 
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;!MyCustObj__c.MainContact__r.email}, &#123;!MyCustObj__c.SecondContact__r.email}</span>
                            <br></br><b>Note: </b>Be sure that all dynamic fields values resolve to a valid email address format and multiple values are separated with a comma(,)
                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_Body__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_SendTo__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_SendTo__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_cc__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_cc__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_bcc__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_bcc__c}"/>
                   <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Set the default FROM Address" for="owa"/>
                    <apex:selectList value="{!SDOC__SDTemplate__c.SDOC__Email_From_OrgWideAddressId__c}" size="1" id="owa">
                            <apex:selectOptions value="{!orgwideids}"/>
                   </apex:selectList>
                   </apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_From_User_Override__c}"/>
                   <apex:pageBlockSectionItem ></apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_From_OrgWideAddress_Only__c}"/>
                    <apex:pageBlockSectionItem ></apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_ReturnToRecord__c}"/>
                </apex:pageBlockSection> 
</apex:tab>                    
<apex:tab label="Auto Create Task" name="tab7" id="mtab7" rendered="{!showtab7}">                  
                    
                    <apex:pageBlockSection title="Task Settings: Auto generate a task upon document generation"  columns="2" >                        
                        <apex:pageBlockSectionItem >
                                <apex:outputLabel value="Enable Task Creation Feature"/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Auto_Create__c}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem >
                                <apex:outputLabel value="Default behavior for creating a Task when this template is selected."/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Auto_Create_Default__c}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem>
                                                
                        <apex:pageBlockSectionItem >
                                <apex:outputLabel value="Prompt user to review Task Details during document generation."/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Details_Override__c}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem>

                    </apex:pageBlockSection>
                    <apex:pageBlockSection title="Task Details: Default Task values"  columns="2" >
                        <apex:pageBlockSectionItem >
                            <div class="ft" style="font-size: 12px;">
                                <center><b>Task Subject</b></center> 
                                <br></br><b>Note 1:</b> If left blank, the Task Subject will default to "S-Doc Generated:" + the name of this template.
                                <br></br><b>Note 2:</b> You can mix merged fields starting from your base object along with static text: 
                                <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>Callback for &#123;!Contact.Name}</i></span>
                                <br></br><b>Note 3:</b> The following special fields are available if needed :&#123;!DocumentID} and &#123;!DocumentName}
                                <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Where <i>&#123;!DocumentID}</i> is the orginal name (eg SD-0001) and <i>&#123;!DocumentName}</i> is the name field of this template</span>
                                <br></br><b>Note 4:</b> If you cannot achieve the desired attachment name below, you can leverage a formula field to dynamically set the task subject field.
                                <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>&#123;!opportunity.sdoc_task_subject_default__c}</i> where sdoc_task_subject_default__c is an example of a formula field you create</span>
                            </div>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

                        <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="Task Subject:"/>
                                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Subject__c}"/>
                        </apex:pageBlockSectionItem>  
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 



                        <apex:pageBlockSectionItem >
                            <div class="ft" style="font-size: 12px;">
                                <center><b>Task Status</b></center>
                                <br></br><b>Note 1:</b> If left blank, the status will default to "Completed", and therefore go directly to "Activity History" instead of "Open Activities"
                                <br></br><b>Note 2:</b> You can mix merged fields from your base object with static text to set the task status field: 
                            </div>
                        </apex:pageBlockSectionItem> 
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

                        <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="Task Status: "/>
                                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Status__c}"/>
                        </apex:pageBlockSectionItem>  
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

                        
                        
                        <apex:pageBlockSectionItem >
                            <div class="ft" style="font-size: 12px;">
                                <center><b>Task Activity Date</b></center> 
                                <br></br><b>Note 1:</b> If left blank, the days to add will default to 0. Therefore the due date will default to today (i.e. the task due date will be same as document generation date)
                                <br></br><b>Note 2:</b> By checking the "Count Business Days Only", the task due date will ignore weekend days when counting. It will not ignore holidays.
                            </div>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="Task Due Date - Days to add:"/>
                                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Due_Add_Days__c}"/>
                        </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                                    <apex:outputLabel value="Task Due Date - Count Business Days Only:"/>
                                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Due_Add_Business_Only__c}"/>
                        </apex:pageBlockSectionItem>                                 

                    </apex:pageBlockSection>
</apex:tab>                    
<apex:tab label="Configure Contact Lookup" name="tab8" id="mtab8" rendered="{!showtab8}">
<apex:pageBlockSection title="Contact Configuration" columns="2">
                <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 11px;">
                        When a document is generated using this template, the S-Docs engine will dynamically search your 
                        base record to find all related contact records. 
                        (This is done by interrogating all lookup fields on your base 
                        object for links to either the Contact object or the Account object). 
                        <br></br>All contacts records found during this search are then added to a picklist. 
                        This picklist is used during the last step that allows a user to choose which contact(s)
                        they want to email the documents to. 
                        <br></br>Additionally, another feature leverages this picklist of related contacts. 
                        S-Docs allows you to place special tags such as -
                         &#123;&#123;!PICKLIST.customRecord.name}} into your template.
                        If used, the user will be presented with an additional step during the document generation process.
                        That step enables a user to chose a particular related contact from this same picklist. The 
                        data from the chosen contact will then be merged back into the document. 
                        <br></br>
                        The list of related objects (on the right) can expand the picklist of available contact records. 
                        Additional related objects (such as junction objects) can be included for the
                        S-Docs engine to search during the document generation process. 
                        Any contact records found will be added to the picklist and therefore will be available 
                        for both emailing and merging functionality as explained above.
                    </div>
                </apex:pageBlockSectionItem>
                    <apex:selectList value="{!contactRolesRT}" multiselect="true" size="15">
                            <apex:selectOptions value="{!rl1List}"/>
                    </apex:selectList>
                </apex:pageBlockSection>

</apex:tab>
</apex:tabPanel>
</apex:pageBlock>

    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__ContactRole__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML2__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML3__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML4__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML5__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML6__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML7__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML8__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML9__c}" rendered="false"/>
    <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML10__c}" rendered="false"/> 
    </apex:form>



<script type="text/javascript">

insert=function(output){
    YAHOO.force.com.myDialog.hide();
    var CKEDITOR   = window.CKEDITOR;
    for ( var i in CKEDITOR.instances ){
       var currentInstance = i;
       break;
    }
        var oEditor   = CKEDITOR.instances[currentInstance];
        oEditor.focus();
        oEditor.insertHtml(output);
};

insertLine=function(output){
    YAHOO.force.com.eDialog.hide();
    var CKEDITOR   = window.CKEDITOR;
    for ( var i in CKEDITOR.instances ){
       var currentInstance = i;
       break;
    }
        var oEditor   = CKEDITOR.instances[currentInstance];
        oEditor.focus();
        oEditor.insertHtml(output);
        var s = oEditor.getSelection(); // getting selection
        var selected_ranges = s.getRanges(); // getting ranges
        var selected_ranges_org = s.getRanges(); // original
        var node = selected_ranges[0].startContainer; // selecting the starting node
        var parents = node.getParents(true); 
        node = parents[parents.length - 2].getFirst();
        while (true) {
            var x = node.getNext();
            if (x == null) {
                break;
            }
            node = x;
        }
        s.selectElement(node);
        selected_ranges = s.getRanges();
        selected_ranges[0].collapse(false);  //  false collapses the range to the end of the selected node, true before the node.
        s.selectRanges(selected_ranges);
        oEditor.insertHtml('<style type="text/css"/></style>');
        s.selectRanges(selected_ranges_org);
};

bind = function(){

var CKEDITOR_BASEPATH = '{!URLFOR($Resource.SDOC__ckEditor,'ckeditor/')}';
CKEDITOR.editorConfig = function( config )
        {
        config.height = '400';
//        config.autoGrow_onStartup = true;
//        config.autoGrow_minHeight = 400;
//        config.autoGrow_bottomSpace = 25;
        // Define changes to default configuration here. For example:
        config.defaultLanguage = 'en';
        config.filebrowserBrowseUrl = '{!$Page.SDOC__SDFileList}';
        config.filebrowserUploadUrl = '{!$Page.SDOC__SDFileUpload}';
        config.filebrowserImageBrowseUrl = '{!$Page.SDOC__SDFileList}';
        config.filebrowserImageUploadUrl = '{!$Page.SDOC__SDFileUpload}';
//        config.filebrowserWindowWidth = '640';
//        config.filebrowserWindowHeight = '480';
        config.enterMode = CKEDITOR.ENTER_BR;
        config.shiftEnterMode = CKEDITOR.ENTER_P;
        config.allowedContent = true;
        config.FormatSource = false;
        config.FormatOutput = false;
        config.removePlugins = 'fixed, autogrow';
//        config.fullPage = true;
//        config.extraPlugins = 'tableresize';
        CKEDITOR.dtd.$removeEmpty['span']=false;
//        config.extraPlugins = 'resize';
//        config.resize_maxWidth = '800';
//        config.forceSimpleAmpersand = true;
        config.toolbar =
        [
        ['Source','-','Preview','-','Maximize','-', 'ShowBlocks','-','Templates'],
        ['Cut','Copy','Paste','PasteText','PasteFromWord','-','Print'],
        ['Undo','Redo','-','Find','Replace'],
        ['Image','Table','Link','PageBreak'],
        '/',
        ['Styles','Format','Font','FontSize'],
        ['TextColor','BGColor'],        
        ['Bold','Italic','Underline','Strike','RemoveFormat','-',],
        ['NumberedList','BulletedList','-','Outdent','Indent'],
        ['JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock', 'lineheight']
        ];
        };
        
        if (!document.getElementsByClassName) {
            document.getElementsByClassName = function (cn) { 
                var rx = new RegExp("(?:^|\\s)" + cn+ "(?:$|\\s)");
                var allT = document.getElementsByTagName("*"), allCN = [], ac="", i = 0, a;
                    while (a = allT[i=i+1]) {
                      ac=a.className;
                      if ( ac && ac.indexOf(cn) !==-1) {
                        if(ac===cn){ allCN[allCN.length] = a; continue;   }
                        rx.test(ac) ? (allCN[allCN.length] = a) : 0;
                      }
                    }
                return allCN;
            }
        }
        
        if (document.getElementsByClassName){
            var e = document.getElementsByClassName( 'ckeditor1' );
            for(var i=0;i<e.length;i++)
                {
                var editor1 = CKEDITOR.replace( e[i]);
                }
           }
}
windowonload = function(){
        bind();
        YAHOO.force.com.init();
}

addEvent(window, 'load', function(){ windowonload() });
function addEvent(element, event, fn) {
    if (element.addEventListener)
        element.addEventListener(event, fn, false);
    else if (element.attachEvent)
        element.attachEvent('on' + event, fn);
}

</script>

</apex:page>