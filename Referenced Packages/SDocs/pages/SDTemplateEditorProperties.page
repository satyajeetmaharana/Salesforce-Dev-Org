<apex:page StandardController="SDOC__SDTemplate__c" extensions="SDOC.SDTemplateEditor">
<style>
textarea { width:100%; height:30px;}
</style>

    <apex:sectionHeader title="Edit Properties" subtitle="{!SDOC__SDTemplate__c.name}"/>
    <apex:form >
        <apex:pageBlock id="pb1" >
                 <apex:pageMessages />
                    <apex:pageBlockButtons >
                        <apex:commandButton value="Save" action="{!save}"/>
                        <apex:commandButton value="Cancel" action="{!cancel}"/>                
                    </apex:pageBlockButtons>

                    <apex:pageBlockSection title="Advanced Settings"  columns="2" >

                        <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                            <apex:outputLabel value="Enable Advanced MS Settings for this template"/>
                            <apex:outputPanel >
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Use_Advanced_Properties__c}">
                                    <apex:actionSupport event="onchange" reRender="pb1"
                                                    status="status"/>
                                </apex:inputField>
                                <apex:actionStatus id="status">
                                        <apex:facet name="start">
                                            <img src="{!URLFOR($Resource.SDoc,'spinner.gif')}" />
                                        </apex:facet>
                                </apex:actionStatus>
                            </apex:outputPanel>
                      </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
	                    </apex:pageBlockSectionItem>                      

                   	<apex:pageBlockSectionItem >
	                    <div class="ft" style="font-size: 12px;">
	                            <center>You can use the field below to override the default attachment naming format  (eg SD-0001)</center> 
	                            <br></br><b>Note 1:</b> You can mix merged fields from your base object with static text: 
	                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>Proposal For &#123;!Opportunity.Account.Name}</i></span>
	                            <br></br><b>Note 2:</b> Do Not include the extension (.doc, .pdf etc) in the attachment format below, it will be added automatically when generated
	                            <br></br><b>Note 3:</b> You can include the following special fields as needed :&#123;!DocumentID} and &#123;!DocumentName}
	                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Where <i>&#123;!DocumentID}</i> is the orginal name (eg SD-0001) and <i>&#123;!DocumentName}</i> is the template name used</span>
	                            <br></br><b>Note 4:</b> If you cannot achieve the desired attachment name below, you can leverage a formula field to dynamically generate the attachment format.
	                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>&#123;!opportunity.sdoc_attachment_name__c}</i> where sdoc_attachment_name is an example of a formula field you create</span>
	                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >                             
                    </apex:pageBlockSectionItem>                    
                   
                      <apex:pageBlockSectionItem >
                                <apex:outputLabel for="an" value="Attachment Name Format:"/>
                                <apex:inputField id="uc" value="{!SDOC__SDTemplate__c.SDOC__Create_Attachment_Name__c}"/>                              
                      </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >                             
                    </apex:pageBlockSectionItem> 
                    
                    <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='PDF' || SDOC__SDTemplate__c.SDOC__Template_Format__c=='XLS'|| SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
                                <apex:outputLabel for="uc" value="Support international characters (Unicode fonts) in PDFs and MS Word, and Excel"/>
                                <apex:inputField id="uc" value="{!SDOC__SDTemplate__c.SDOC__PDF_Unicode__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='PDF' || SDOC__SDTemplate__c.SDOC__Template_Format__c=='XLS'|| SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">
					</apex:pageBlockSectionItem>

                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="aa" value="Auto Attach related case articles to outbound email:"/>
                                <apex:inputField id="aa" value="{!SDOC__SDTemplate__c.SDOC__InclArticles__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>
                    
                    <apex:pageBlockSectionItem >
                                <apex:outputLabel for="aa" value="Show all warning messages during document generation:"/>
                                <apex:inputField id="aa" value="{!SDOC__SDTemplate__c.SDOC__Show_Warning_Messages__c}"/>                              
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>

                    </apex:pageBlockSection>

        <apex:panelGroup id="PanelMS" rendered="{!SDOC__SDTemplate__c.SDOC__Template_Format__c=='DOC'}">                    
                <apex:pageBlockSection title="Page Properties" columns="2">
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Embed_Images__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Margin_Left__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Unit_of_Measure__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Margin_Right__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Width__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Header_Margin__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Height__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_Page_Footer_Margin__c}"/>
                </apex:pageBlockSection>
            <apex:pageBlockSection title="Header on First Page" columns="1">
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPHeader_BackGrndImgUrl__c}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPHeader_BackGrndImgStyle__c}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPHeader_Content__c}"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Header for Remaining Pages" columns="1">
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPHeader_BackGrndImgUrl__c}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPHeader_BackGrndImgStyle__c}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPHeader_Content__c}"/>
            </apex:pageBlockSection>
             <apex:pageBlockSection title="Footer on First Page" columns="1">
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPFooter_BackGrndImgUrl__c}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPFooter_BackGrndImgStyle__c}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_FPFooter_Content__c}"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Footer on Remaining Pages" columns="1">
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPFooter_BackGrndImgUrl__c}" />
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPFooter_BackGrndImgStyle__c}"/>
                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__MS_SPFooter_Content__c}"/>
            </apex:pageBlockSection>
        </apex:panelGroup>
        
        <apex:panelGroup id="PanelEmail">
                <apex:pageBlockSection title="Email Settings" columns="2">
                   <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                            The fields below can be used to control the behavior and defaults when this template is emailed.
                             <br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note, to set the body of the outbound email, you must create an S-Docs template where the "Template Format" field is set to HTML. 
                            That HTML template, when included along with other generated S-Docs, will automatically be substituted as the body of the outbound email message. <br />
							This gives you far greater control and flexibility to create your email message and attachments.
							<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To help avoid conflicts when a user generates a set of templates having different email
							 defaults, we recommend setting the fields below only on the "HTML" version of your S-Docs templates.
                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    </apex:pageBlockSectionItem>
                    
                    <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                           <center><b>Email Subject</b></center>
                            <br/>
                            For the subject line, you may enter a static value or use dynamic fields. <br />
                            <br></br><b>Example 1:</b> If your base object was Opportunity, you could set the default subject to: 
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i> Your quote request for &#123;!Opportunity.Name} is attached.</i></span>
                            <br></br><b>Example 2:</b> If your base object was MyCustObj__c,, you could set the default subject to: 
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>Important Information Re Acct#:  &#123;!MyCustObj__c.Account__r.AccountNumber}</i></span>
                            
                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                            Locking fields will prevent users from changing the value to anything other than the default value defined in the left column. If the default value is left blank
                            and you lock the field, the entire field and label will be hidden, and therefore cannot be set by the user. If you leave the "Send To"" field blank
                            and you check "Lock Send To Address", the user will be blocked from emailing this document. If a user is generating multiple documents with different locking restrictions,
                            the most restrictive settings are applied to the document set generated.
                    </div>
                    </apex:pageBlockSectionItem>
                    
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Subject__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_Subject__c}"/>
                    <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 12px;">
                            <center><b>Email Recipients</b></center>
                            <br></br><b>Example 1:</b> For a template Related To an Account, where you want to automatically bcc the account owner and your compliance team, you can set bbc to:
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;!Account.owner.email}, compliance@mycompany.com</span>
                            <br></br><b>Example 2:</b> For a template Related To a custom object named MyCustObj__c, you could default the 'Email Send To': 
                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;!MyCustObj__c.MainContact__r.email}, &#123;!MyCustObj__c.SecondContact__r.email}</span>
                            <br></br><b>Note: </b>Be sure that all dynamic fields values resolve to a valid email address format and multiple values are separated with a comma(,)
                    </div>
                    </apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_Body__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_SendTo__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_SendTo__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_cc__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_cc__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_bcc__c}"/>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_Lock_bcc__c}"/>
                   <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Set the default FROM Address" for="owa"/>
                    <apex:selectList value="{!SDOC__SDTemplate__c.SDOC__Email_From_OrgWideAddressId__c}" size="1" id="owa">
                            <apex:selectOptions value="{!orgwideids}"/>
                   </apex:selectList>
                   </apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_From_User_Override__c}"/>
                   <apex:pageBlockSectionItem ></apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_From_OrgWideAddress_Only__c}"/>
                    <apex:pageBlockSectionItem ></apex:pageBlockSectionItem>
                    <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Email_ReturnToRecord__c}"/>
                </apex:pageBlockSection> 
        </apex:panelGroup>

                    <apex:pageBlockSection title="Task Settings: Auto generate task whenever document is generated"  columns="2" >                        
                        <apex:pageBlockSectionItem >
                            	<apex:outputLabel value="Enable Auto-Task creation for this for this template"/>
                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Auto_Create__c}"/>
                      	</apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem>

	                   	<apex:pageBlockSectionItem >
	                    	<div class="ft" style="font-size: 12px;">
	                            <center><b>Task Subject</b></center> 
	                            <br></br><b>Note 1:</b> If left blank, the Task Subject will default to "S-Doc Generated:" + the name of this template.
	                            <br></br><b>Note 2:</b> You can mix merged fields starting from your base object along with static text: 
	                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>Callback for &#123;!Contact.Name}</i></span>
	                            <br></br><b>Note 3:</b> The following special fields are available if needed :&#123;!DocumentID} and &#123;!DocumentName}
	                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Where <i>&#123;!DocumentID}</i> is the orginal name (eg SD-0001) and <i>&#123;!DocumentName}</i> is the name field of this template</span>
	                            <br></br><b>Note 4:</b> If you cannot achieve the desired attachment name below, you can leverage a formula field to dynamically set the task subject field.
	                            <br></br><span style="font-size: 11px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <i>&#123;!opportunity.sdoc_task_subject_default__c}</i> where sdoc_task_subject_default__c is an example of a formula field you create</span>
	                    	</div>
	                    </apex:pageBlockSectionItem>
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

	                    <apex:pageBlockSectionItem >
	                            	<apex:outputLabel value="Task Subject:"/>
	                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Subject__c}"/>
	                   	</apex:pageBlockSectionItem>  
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 



	                   	<apex:pageBlockSectionItem >
	                    	<div class="ft" style="font-size: 12px;">
	                            <center><b>Task Status</b></center> 
	                            <br></br><b>Note 1:</b> If left blank, the status will default to "Completed", and therefore go directly to "Activity History" instead of "Open Activities"
	                            <br></br><b>Note 2:</b> You can mix merged fields from your base object with static text to set the task status field: 
	                    	</div>
                        </apex:pageBlockSectionItem> 
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

	                    <apex:pageBlockSectionItem >
   	                            	<apex:outputLabel value="Task Status: "/>
	                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Status__c}"/>
	                   	</apex:pageBlockSectionItem>  
                        <apex:pageBlockSectionItem >
                        </apex:pageBlockSectionItem> 

                        
                        
	                   	<apex:pageBlockSectionItem >
	                    	<div class="ft" style="font-size: 12px;">
	                            <center><b>Task Activity Date</b></center> 
	                            <br></br><b>Note 1:</b> If left blank, the days to add will default to 0. Therefore the due date will default to today (i.e. the task due date will be same as document generation date)
	                            <br></br><b>Note 2:</b> By checking the "Count Business Days Only", the task due date will ignore weekend days when counting. It will not ignore holidays.
	                    	</div>
	                    </apex:pageBlockSectionItem>
	                    <apex:pageBlockSectionItem >
	                    </apex:pageBlockSectionItem>
	                    
	                    <apex:pageBlockSectionItem >
	                            	<apex:outputLabel value="Task Due Date - Days to add:"/>
	                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Due_Add_Days__c}"/>
	                   	</apex:pageBlockSectionItem>  
	                    <apex:pageBlockSectionItem >
	                            	<apex:outputLabel value="Task Due Date - Count Business Days Only:"/>
	                                <apex:inputField value="{!SDOC__SDTemplate__c.SDOC__Task_Due_Add_Business_Only__c}"/>
	                   	</apex:pageBlockSectionItem>                                 

					</apex:pageBlockSection>
    
        <apex:panelGroup id="PanelStandard">
                <apex:pageBlockSection title="Contact Configuration" columns="2">
                <apex:pageBlockSectionItem >
                    <div class="ft" style="font-size: 11px;">
                        When a document is generated using this template, the S-Docs engine will dynamically search your 
                        base record to find all related contact records. 
                        (This is done by interrogating all lookup fields on your base 
                        object for links to either the Contact object or the Account object). 
                        <br></br>All contacts records found during this search are then added to a picklist. 
                        This picklist is used during the last step that allows a user to choose which contact(s)
                        they want to email the documents to. 
                        <br></br>Additionally, another feature leverages this picklist of related contacts. 
                        S-Docs allows you to place special tags such as -
                         &#123;&#123;!PICKLIST.customRecord.name}} into your template.
                        If used, the user will be presented with an additional step during the document generation process.
                        That step enables a user to chose a particular related contact from this same picklist. The 
                        data from the chosen contact will then be merged back into the document. 
                        <br></br>
                        The list of related objects (on the right) can expand the picklist of available contact records. 
                        Additional related objects (such as junction objects) can be included for the
                        S-Docs engine to search during the document generation process. 
                        Any contact records found will be added to the picklist and therefore will be available 
                        for both emailing and merging functionality as explained above.
                    </div>
                </apex:pageBlockSectionItem>
                    <apex:selectList value="{!contactRolesRT}" multiselect="true" size="15">
                            <apex:selectOptions value="{!rl1List}"/>
                    </apex:selectList>
                </apex:pageBlockSection>
        </apex:panelGroup>
        </apex:pageBlock>
        <apex:outputField value="{!SDOC__SDTemplate__c.SDOC__ContactRole__c}"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Base_Object__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML2__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML3__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML4__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML5__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML6__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML7__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML8__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML9__c}" rendered="false"/>
        <apex:outputText value="{!SDOC__SDTemplate__c.SDOC__Template_XML10__c}" rendered="false"/> 
    </apex:form>
</apex:page>